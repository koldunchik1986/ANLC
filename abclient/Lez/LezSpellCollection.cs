using System.Collections.Generic;
using System.Text;
using ABClient.Properties;

namespace ABClient.Lez
{
    public static class LezSpellCollection
    {
        public static readonly SortedDictionary<int, LezSpell> Spells;
        public static readonly int[] Hits = {269, 037, 056, 205, 208, 122, 094, 144, 148 };
        public static readonly int[] Blocks = { 267, 271, 057, 258, 142, 181, 380 };
        public static readonly int[] RestoreHp = { 265, 073, 223, 084, 162, 385, 388, 320, 032 };
        public static readonly int[] RestoreMa = { 085, 033 };
        public static readonly int[] Misc =
        {
            // магия
            055, 049, 051, 259, 253, 254, 087, 090, 153, 197, 177, 
            // приемы
            356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369,
            370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384,
            386, 387, 389, 390, 391,
            // абилки
            268, 272
        };

        public static readonly int[] Od =
        {
            0,0,50,90,35,50,60,30,50,60,30,50,35,80,40,85,40,85,40,85,40,100,45,
            70,70,70,130,90,90,45,60,90,30,30,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,100,
            0,200,0,0,0,100,100,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,
            0,0,0,0,100,100,0,100,0,0,150,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,
            0,100,0,0,0,100,0,0,0,0,150,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,100,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,100,
            0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,100,100,0,0,0,100,200,0,0,0,0,0,90,70,90,
            70,90,70,90,70,100,100,100,70,100,70,70,100,0,30,30,30,30,30,30,30,30,
            30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,
            30,30,30,30,30,50,90,30,30,30,30,30,30,30,30,30,30,30,30,0,0,0,0,30,
            30,100,100,100,80,100,100,100,100,100,100,100,50,100,100,100,100,100,
            150,50,100,100,50,50,100,100,50,50,100,30,50,100,50,50,50,50,100,30,
            50,100,50,100,30,100,50,100,90,100,50,100,100,70,100,50,100,100,100,
            50,5,5,5,5,5,100,150,50,100,140,100
        };

        public static readonly int[] PosType =
        {
            1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,4,4,
            0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,3,0,3,0,0,0,3,1,3,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,3,0,3,0,0,3,0,0,0,1,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,3,0,1,0,0,0,1,0,0,0,0,3,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,
            0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
            0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,3,3,0,0,0,0,0,3,3,2,3,3,3,3,
            3,4,4,4,4,4,5,4,4,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,
            4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,6,4,4,4,4,4,4,4,4,4,4,1,1,1,1,4,4,4,1,
            1,1,2,3,1,1,1,1,1,1,1,1,1,1,1,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
            3,3,3,3,3,3,3,3,3,2,3,3,3,3,3,3,3,3,1,1,1,2,2,2,2,2,3,3,3,3,3,3
        };

        public static readonly int[] PosMana =
        {
            0, 0, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20,
            40, 65, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 300, 0, 0, 0, 50, 75, 100, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 100, 0, 100, 0, 0, 150, 0, 0, 0, 75, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 50, 0, 0, 0, 75, 0, 0, 0, 0, 200, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 75, 0, 0, 0,
            0, 0, 0, 0, 50, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 150, 100, 0, 0, 0, 100, 200, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 50,
            10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
            0, 0, 0, 0, 0, 0, 20, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
        };

        static LezSpellCollection()
        {
            Spells = new SortedDictionary<int, LezSpell>();
            var pars = Resources.spells.Split(',');
            for (var i = 0; i < pars.Length; i++)
            {
                Spells.Add(i, new LezSpell(i, pars[i].Trim('"')));
            }

            /*
            var sb = new StringBuilder();
            foreach (var key in Spells.Keys)
            {
                sb.AppendFormat($"{key} name:{Spells[key].Name} type:{PosType[key]} od:{Od[key]} mana:{PosMana[key]}");
                sb.AppendLine();
            }
            
            File.WriteAllText("LezSpellCollection.Spells.txt", sb.ToString());
            */
        }

        public static string SpellsToString(IEnumerable<int> spells)
        {
            var sb = new StringBuilder();
            foreach (var spellId in spells)
            {
                if (sb.Length > 0)
                    sb.Append(',');

                sb.Append(spellId);
            }

            return sb.ToString();
        }

        public static int[] SpellsFromString(string val)
        {
            var sp = val.Split(',');
            var list = new List<int>();
            foreach (var e in sp)
            {
                int i;
                if (int.TryParse(e, out i))
                    list.Add(i);
            }

            return list.ToArray();
        }
    }
}
